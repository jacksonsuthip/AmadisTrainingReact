{"version":3,"file":"static/js/222.a904838c.chunk.js","mappings":"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","sources":["Crud/empList.js","Crud/employeReg.js","Crud/crudApp.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import './App.css';\r\n//import {useState, useEffect} from \"react\";\r\n\r\nfunction EmpList(props) {\r\n    const empDet = props.empDet || [];\r\n    // let [empDet, updateDet] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //      updateDet(props.empDet);\r\n    //      console.log(\"00\");\r\n    // }, [props]);\r\n\r\n    // function handleRemove(name) {\r\n    //     const newList = empDet.filter((emp) => emp.name !== name);\r\n    //     //console.log(\"new\",newList);\r\n    //     this.useState({newList});\r\n    //     updateDet(newList);  \r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <p style={{ margin: '25px' }}></p>\r\n            <table className='table table-hover table-bordered table-striped'>\r\n                <col width=\"15%\" />\r\n                <col width=\"20%\" />\r\n                <col width=\"15%\" />\r\n                <col width=\"20%\" />\r\n                <col width=\"30%\" />\r\n                <thead className='tabHed'>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Address</th>\r\n                        <th>City</th>\r\n                        <th>Gender</th>\r\n                        <th>Edit/Remove</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        empDet.map((emp, i) =>\r\n                            <tr key={\"keyName\" + i}>\r\n                                <td>{emp.name}</td>\r\n                                <td>{emp.address}</td>\r\n                                <td>{emp.city}</td>\r\n                                <td>{emp.gender}</td>\r\n                                <td className='tdClass'>\r\n                                    <button type=\"button\" className='btn1' onClick={() => props.getEmpEdit(emp, i)}>Edit</button>\r\n                                    <button type=\"button\" className='btn1 btn-danger' onClick={() => props.empRemove(i)}>Delete</button>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                </tbody>\r\n\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\nexport default EmpList;","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport {useState, useEffect} from \"react\";\r\n\r\n\r\nfunction EmpReg(props){\r\n    \r\n    const [empName, updateEmpName] = useState(\"\");\r\n    const [empAddr, updateEmpAddr] = useState(\"\");\r\n    const [empCity, updateEmpCity] = useState(\"\");\r\n    const [genType, updateGenType] = useState(\"\");\r\n    const [count, updateCount]     = useState(0);\r\n    const [count1, updateCount1]   = useState();\r\n    const [empList, updateEmpList] = useState([]);\r\n    const [btnUpdate, btnUpdate1]  = useState(true);\r\n    const [btnAdd, btnAdd1]        = useState(false);\r\n\r\n    useEffect(() => {\r\n        updateEmpName(props.empEdit.name);\r\n    }, [props.empEdit.name]);\r\n    useEffect(() => {\r\n        updateEmpAddr(props.empEdit.address);\r\n    }, [props.empEdit.address]);\r\n    useEffect(() => {\r\n        updateEmpCity(props.empEdit.city);\r\n    }, [props.empEdit.city]);\r\n    useEffect(() => {\r\n        updateGenType(props.empEdit.gender);\r\n    }, [props.empEdit.gender]);\r\n    useEffect(() => {\r\n        updateCount1(props.empEdit.id);\r\n        if (props.empEdit.id !== undefined){\r\n            btnUpdate1(false);\r\n            btnAdd1(true);\r\n        }\r\n    }, [props.empEdit.id]);\r\n\r\n    const updateEmpName1 = (event) => {\r\n        updateEmpName(event.target.value);\r\n    }\r\n    function updateEmpAddr1(event){\r\n        updateEmpAddr(event.target.value)\r\n    }\r\n    function updateGenType1(event){\r\n        if(event.target.checked){\r\n            updateGenType(\"Male\");\r\n        }\r\n    }\r\n    function updateGenType2(event){\r\n        if(event.target.checked){\r\n            updateGenType(\"Female\");\r\n        }\r\n    }\r\n\r\n    const addEmployee = () => {\r\n        //var updateEmpList1 = [...empList];\r\n        var updateEmpList1 = JSON.parse(JSON.stringify(empList));\r\n        updateCount(count + 1)\r\n        updateEmpList1.push({\r\n            name: empName,\r\n            address: empAddr,\r\n            city: empCity,\r\n            gender: genType,\r\n            id : count\r\n        });\r\n        updateEmpList(updateEmpList1);\r\n        props.getEmpDetailList(updateEmpList1);\r\n        resetForm()\r\n    }\r\n    function updateEmployee(){\r\n        var updateEmpList1 = JSON.parse(JSON.stringify(empList));\r\n        updateEmpList1.splice(props.empEditI, 1, {\r\n            name: empName,\r\n            address: empAddr,\r\n            city: empCity,\r\n            gender: genType,\r\n            id: count1\r\n        });\r\n        updateEmpList(updateEmpList1);\r\n        props.getEmpDetailList(updateEmpList1);\r\n        btnAdd1(false);\r\n        btnUpdate1(true);\r\n        resetForm()\r\n        console.log(\"aa\");\r\n    }\r\n\r\n    function resetForm() {\r\n        updateEmpName(\"\");\r\n        updateEmpAddr(\"\");\r\n        updateEmpCity(\"\");\r\n        updateGenType(\"\");\r\n    }\r\n\r\n    return(\r\n        <div className='row'>\r\n            <div className=' formDiv'>\r\n                <fieldset className='field'>\r\n                    <p></p>   \r\n                <div className='row'>\r\n                    <div className='col-md-1'></div>\r\n                    <div className='col-md-3'><b>Name</b></div>\r\n                    <div className='col-md-5'><input type=\"text\" className='form-control' value={empName}\r\n                    onChange={updateEmpName1}\r\n                    /></div>\r\n                </div>\r\n                <p></p>\r\n                <div className='row'>\r\n                    <div className='col-md-1'></div>\r\n                    <div className='col-md-3'><b>Address</b></div>\r\n                    <div className='col-md-5'><textarea className='form-control' value={empAddr}\r\n                    onChange={updateEmpAddr1}\r\n                    >    \r\n                    </textarea></div>\r\n                </div>\r\n                <p></p>\r\n                <div className='row'>\r\n                    <div className='col-md-1'></div>\r\n                    <div className='col-md-3'><b>City</b></div>\r\n                    <div className='col-md-5'>\r\n                        <select className='form-control' value={empCity}\r\n                            onChange={e => updateEmpCity(e.target.value)}\r\n                            >\r\n                            <option value=\"\">Select City</option>\r\n                            <option value=\"Chennai\">Chennai</option>\r\n                            <option value=\"Mumbai\">Mumbai</option>\r\n                            <option value=\"Kolkata\">Kolkata</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <p></p>\r\n                <div className='row'>\r\n                    <div className='col-md-1'></div>\r\n                    <div className='col-md-3'><b>Gender</b></div>\r\n                    <div className='col-md-6 radioDiv'>\r\n                        <input className=\"form-check-input\" type=\"radio\" name=\"genType\" id='genM'  \r\n                        checked = {genType === 'Male'} \r\n                        onChange = {updateGenType1}\r\n                        />\r\n                            <label className=\"form-check-label radioDiv\" htmlFor=\"genM\">Male</label>\r\n                        <input className=\"form-check-input\" type=\"radio\" name=\"genType\" id='genF'  \r\n                        checked = {genType === 'Female'} \r\n                        onChange = {updateGenType2}\r\n                        />\r\n                            <label className=\"form-check-label radioDiv\" htmlFor=\"genF\">Female</label>\r\n                        <input className=\"form-check-input\" type=\"radio\" name=\"genType\" id='genO'  \r\n                        checked = {genType === 'Other'} \r\n                        onChange = {e => e.target.checked && updateGenType(\"Other\")}\r\n                        />\r\n                            <label className=\"form-check-label radioDiv\" htmlFor=\"genO\">Other</label>\r\n                    </div>\r\n                </div>    \r\n                <p></p>\r\n                <div className='row'>\r\n                    <div className='col-md-4'></div>\r\n                    <div className='col-md-2'>\r\n                        <button type=\"button\" className='btn1 btn2' onClick={addEmployee} disabled={btnAdd}>Add</button>\r\n                        <button type=\"button\" className='btn1' onClick={updateEmployee} disabled={btnUpdate}>Update</button>\r\n                    </div>\r\n                </div>\r\n                <input type=\"hidden\" value={count} />\r\n                <input type=\"hidden\" value={count1} />\r\n                <p></p>\r\n                </fieldset>\r\n            </div>\r\n        </div>\r\n    )\r\n}      \r\nexport default EmpReg;","// import AppLogo from './AppLogo';\r\nimport './App.css';\r\nimport EmpList from './empList';\r\nimport EmpReg from './employeReg';\r\nimport { useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction CrudApp() {\r\n\r\n    const [empObjList, EmpDetails] = useState([]);\r\n    const [setEmpEdit, getEmpEdit2] = useState({});\r\n    const [setEmpEditI, getEmpEdit3] = useState({});\r\n    const [empDelete1, empRemove2] = useState([]);\r\n\r\n    function getEmpDet(allDet) {\r\n        EmpDetails(allDet);\r\n    }\r\n\r\n    function getEmpEdit1(editObj, i) {\r\n        getEmpEdit2(editObj, i);\r\n        getEmpEdit3(i)\r\n        //console.log(\"i--\",i)\r\n    }\r\n\r\n    function empRemove1(i) {\r\n        empRemove2(i);\r\n        empObjList.splice(i, 1);\r\n    }\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <div className=\"container\">\r\n                    <span style={{ color: 'white', fontSize: '1.6rem' }}>Registration</span>\r\n                    <div className=\" navbar-collapse ulDiv\" id=\"navbarResponsive\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className='nav-item mx-0 mx-lg-1'>\r\n                                <Link to='/home' className='li'>Home</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <div style={{marginTop:'30px'}} className='container'>\r\n                <div className='row'>\r\n                    <div className='col-md-6'>\r\n                        <EmpReg getEmpDetailList={getEmpDet} empEditI={setEmpEditI} empEdit={setEmpEdit} empD={empDelete1} />\r\n                    </div>\r\n                    <div className='col-md-6'>\r\n                        <EmpList empDet={empObjList} getEmpEdit={getEmpEdit1} empRemove={empRemove1} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default CrudApp;\r\n"],"names":["props","empDet","style","margin","className","width","map","emp","i","name","address","city","gender","type","onClick","getEmpEdit","empRemove","useState","empName","updateEmpName","empAddr","updateEmpAddr","empCity","updateEmpCity","genType","updateGenType","count","updateCount","count1","updateCount1","empList","updateEmpList","btnUpdate","btnUpdate1","btnAdd","btnAdd1","resetForm","useEffect","empEdit","id","undefined","value","onChange","event","target","e","checked","htmlFor","updateEmpList1","JSON","parse","stringify","push","getEmpDetailList","disabled","splice","empEditI","console","log","empObjList","EmpDetails","setEmpEdit","getEmpEdit2","setEmpEditI","getEmpEdit3","empDelete1","empRemove2","color","fontSize","to","marginTop","allDet","empD","editObj"],"sourceRoot":""}