{"version":3,"file":"static/js/53.4bd5dab2.chunk.js","mappings":"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","sources":["Redux/todoSlice.js","Redux/reduxLeft.js","Redux/reduxRight.js","Redux/reduxApp.js","Redux/store.js","Redux/providerComo.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst defaultState = {\r\n  todoList: [],\r\n  todoname: '',\r\n  doneTodo: []\r\n}\r\n\r\nexport const todoSlice = createSlice({\r\n  name: 'todoArr',\r\n  initialState: defaultState,\r\n  reducers: {\r\n\r\n    addTodo: (state, action) => {\r\n      state.todoname = action.payload\r\n      state.todoList = ({ tdName: state.todoname, compT: false });\r\n    },\r\n    makeTodo: (state, action) => {\r\n      state.valTodo = action.payload\r\n      if (state.valTodo.complet === true) {\r\n        state.doneTodo = ({ tdName: state.valTodo.tdname, complet: state.valTodo.complet });\r\n      } else {\r\n        state.doneTodo = ({ tdName: state.valTodo.tdname, complet: false });\r\n        // console.log(state.doneTodo);\r\n      }\r\n    },\r\n\r\n  },\r\n})\r\n\r\nexport const { addTodo, makeTodo } = todoSlice.actions\r\n\r\nexport default todoSlice.reducer","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport './redux.css';\r\nimport { makeTodo } from \"./todoSlice\";\r\n\r\nexport default function ReduxLeft() {\r\n\r\n    const todoDetail = useSelector((state) => state.todoArr.todoList)\r\n    const dispatch = useDispatch();\r\n\r\n    const [todoUpdate, setTodoUpdate] = useState([]);\r\n    const [checkbx, setCheckbx] = useState(false);\r\n\r\n    useEffect(() => {\r\n        var mTodo = JSON.parse(JSON.stringify(todoUpdate));\r\n        if (todoDetail.tdName !== undefined) {\r\n            mTodo.push(todoDetail);\r\n            setTodoUpdate(mTodo);\r\n        }\r\n    }, [todoDetail])\r\n\r\n    function setCheck(val, che, i) {\r\n        if (che === true) {\r\n            setCheckbx(true);\r\n            dispatch(makeTodo({ tdname: val.tdName, complet: true }));\r\n        } else {\r\n            setCheckbx(false);\r\n            dispatch(makeTodo({ tdname: val.tdName, complet: false }));\r\n        }\r\n    }\r\n    const removeTodo = (i) => {\r\n        var mTodo = JSON.parse(JSON.stringify(todoUpdate));\r\n        mTodo.splice(i, 1);\r\n        setTodoUpdate(mTodo);\r\n    }\r\n\r\n    return (\r\n        <div className=\"reduxDiv\">\r\n            <div style={{ paddingTop: '20px', textAlign: 'center' }}><b>ToDo List</b></div>\r\n            <hr />\r\n            {\r\n                todoUpdate.map((todoval, i) =>\r\n                    <div className='row' key={i} style={{ paddingBottom: '8px' }} >\r\n                        <div className='col-md-1' style={{ textAlign: 'right' }}>{i + 1}.</div>\r\n                        <div className='col-md-8'>\r\n                            <input type='checkbox'\r\n                                onChange={e => setCheck(todoval, e.target.checked, i)} />\r\n                            <span className={checkbx[i] && \"lin\"} style={{ paddingLeft: '10px' }}>\r\n                                {todoval.tdName}</span>\r\n                        </div>\r\n                        <div className=\"col-md-2\"><button type=\"button\" className='btn2'\r\n                            disabled={checkbx[i]}\r\n                            onClick={e => removeTodo(i)} >Delete</button></div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function ReduxRight() {\r\n\r\n    const todoDetail1 = useSelector((state) => state.todoArr?.doneTodo)\r\n\r\n    const [todoUpdate, setTodoUpdate] = useState([]);\r\n\r\n    useEffect(() => {\r\n        var mTodo = JSON.parse(JSON.stringify(todoUpdate));\r\n        if (todoDetail1.complet === true) {\r\n            mTodo.push(todoDetail1);\r\n            setTodoUpdate(mTodo);\r\n        } else {\r\n            var userIndex = todoUpdate.findIndex(doneT => doneT.tdName === todoDetail1.tdName);\r\n            if (userIndex >= 0) {\r\n                mTodo.splice(userIndex, 1);\r\n                setTodoUpdate(mTodo);\r\n                // console.log(userIndex);\r\n            }\r\n        }\r\n    }, [todoDetail1])\r\n\r\n    return (\r\n        <div className=\"reduxDiv\">\r\n            <div style={{ paddingTop: '20px', textAlign: 'center' }}><b>ToDo List Completed - {todoUpdate.length}</b></div>\r\n            <hr />\r\n            {\r\n                todoUpdate.map((todoval, i) =>\r\n                    <ul key={i}  style={{ paddingBottom: '8px' }}>\r\n                        <li>{todoval.tdName}</li>\r\n                    </ul>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReduxLeft from \"./reduxLeft\";\r\nimport ReduxRight from \"./reduxRight\";\r\nimport { addTodo } from \"./todoSlice\";\r\n\r\nexport default function ReduxApp() {\r\n\r\n    const [todoName, setTodoName] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    function sendTodo() {\r\n        dispatch(addTodo(todoName));\r\n        resetForm();\r\n    }\r\n\r\n    function resetForm() {\r\n        setTodoName(\"\");\r\n    }    \r\n    return (\r\n        <div className=\"\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <div className=\"container\">\r\n                    <span style={{ color: 'white', fontSize: '1.6rem' }}>Redux App</span>\r\n                    <div className=\" navbar-collapse ulDiv\" id=\"navbarResponsive\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className='nav-item mx-0 mx-lg-1'>\r\n                                <Link to={'/home'} className='li'>Home</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <div style={{ marginTop: '30px' }} className='container'>\r\n                <div className='row'>\r\n                    <div className='col-md-1'></div>\r\n                    <div className='col-md-8'>\r\n                        <input className='form-control' type='text' value={todoName} onChange={e => setTodoName(e.target.value)} placeholder=\"Enter ToDo . . .\" />\r\n                    </div>\r\n                    <div className='col-md-2'>\r\n                        <button type='button' className=\"btn1\" onClick={sendTodo}>Add</button>\r\n                    </div>\r\n                </div>\r\n                <p style={{ marginTop: '30px' }}></p>\r\n                <div className='row'>\r\n                    <div className='col-md-6'><ReduxLeft /></div>\r\n                    <div className='col-md-6'><ReduxRight /></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport todoSlice from \"./todoSlice\";\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        todoArr: todoSlice,\r\n    },\r\n});\r\n\r\nexport default store;","import { Provider } from \"react-redux\";\r\nimport ReduxApp from \"./reduxApp\";\r\nimport store from \"./store\";\r\n\r\nexport default function ReduxProviderComp() {\r\n    return (\r\n        <Provider store={store}>\r\n            <ReduxApp />\r\n        </Provider>\r\n    );\r\n}\r\n"],"names":["todoSlice","createSlice","name","initialState","todoList","todoname","doneTodo","reducers","addTodo","state","action","payload","tdName","compT","makeTodo","valTodo","complet","tdname","actions","ReduxLeft","todoDetail","useSelector","todoArr","dispatch","useDispatch","useState","todoUpdate","setTodoUpdate","checkbx","setCheckbx","useEffect","mTodo","JSON","parse","stringify","undefined","push","className","style","paddingTop","textAlign","map","todoval","i","paddingBottom","type","onChange","e","val","target","checked","paddingLeft","disabled","onClick","splice","removeTodo","ReduxRight","todoDetail1","userIndex","findIndex","doneT","length","ReduxApp","todoName","setTodoName","color","fontSize","id","to","marginTop","value","placeholder","configureStore","reducer","ReduxProviderComp","store"],"sourceRoot":""}